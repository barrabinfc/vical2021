{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"graphql-modules\"","webpack:///external \"apollo-datasource\"","webpack:///external \"apollo-server\"","webpack:///external \"apollo-server-core\"","webpack:///external \"@notionhq/client\"","webpack:///external \"asyncairtable\"","webpack:///external \"dotenv\"","webpack:///./src/books/schema.graphql","webpack:///./src/projects/schema.graphql","webpack:///external \"graphql-type-json\"","webpack:///external \"change-case\"","webpack:///./src/projects/Notion.graphql","webpack:///./src/types.graphql","webpack:///./src/dataSources/notion.ts","webpack:///./src/dataSources/airtable.ts","webpack:///./src/secrets.ts","webpack:///./src/dataSources/index.ts","webpack:///./src/books/resolver.ts","webpack:///./src/books/index.ts","webpack:///./src/projects/enums.ts","webpack:///./src/projects/resolvers.ts","webpack:///./src/projects/index.ts","webpack:///./src/index.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = require(\"graphql-modules\");","module.exports = require(\"apollo-datasource\");","module.exports = require(\"apollo-server\");","module.exports = require(\"apollo-server-core\");","module.exports = require(\"@notionhq/client\");","module.exports = require(\"asyncairtable\");","module.exports = require(\"dotenv\");","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Book\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Node\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"synopsis\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"rating\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"books\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"limit\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"page\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Book\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":145}};\n    doc.loc.source = {\"body\":\"type Book implements Node {\\n  id: ID!\\n  name: String\\n  synopsis: String\\n  rating: Int\\n}\\n\\ntype Query {\\n  books(limit: Int!, page: Int!): [Book]\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ProjectItem\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Node\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"object\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"properties\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Property\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ProjectItemsEdge\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Edge\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"node\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ProjectItem\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"cursor\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ProjectItemsConnection\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Page\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"totalCount\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"edges\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ProjectItemsEdge\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"pageInfo\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PageInfo\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeExtension\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"projectsDatabase\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Database\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"projects\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ProjectItemsConnection\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":399}};\n    doc.loc.source = {\"body\":\"#import \\\"./Notion.graphql\\\"\\n\\ntype ProjectItem implements Node {\\n  id: ID!\\n  object: String\\n  properties: [Property]\\n}\\n\\ntype ProjectItemsEdge implements Edge {\\n  node: ProjectItem\\n  cursor: ID!\\n}\\n\\ntype ProjectItemsConnection implements Page {\\n  totalCount: Int!\\n  edges: [ProjectItemsEdge]\\n  pageInfo: PageInfo!\\n}\\n\\nextend type Query {\\n  projectsDatabase: Database\\n  projects: ProjectItemsConnection\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require(\"./Notion.graphql\").definitions));\n\n\n      module.exports = doc;\n    \n","module.exports = require(\"graphql-type-json\");","module.exports = require(\"change-case\");","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RichTextTypeEnum\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"TEXT\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"MENTION\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"EQUATION\"},\"directives\":[]}]},{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PropertyTypeEnum\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"TITLE\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RICH_TEXT\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"NUMBER\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"SELECT\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"MULTI_SELECT\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"DATE\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PEOPLE\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FILE\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CHECKBOX\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"URL\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"EMAIL\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PHONE_NUMBER\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FORMULA\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RELATION\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ROLLUP\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATED_TIME\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CREATED_BY\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"LAST_EDITED_TIME\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"LAST_EDITED_BY\"},\"directives\":[]}]},{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"NumberFormatEnum\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"NUMBER\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"NUMBER_WITH_COMMAS\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PERCENT\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"DOLLAR\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"EURO\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"POUND\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"YEN\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RUBBLE\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RUPEE\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"WON\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"YUAN\"},\"directives\":[]}]},{\"kind\":\"InterfaceTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Property\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Node\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PropertyTypeEnum\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PropertyTitle\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Property\"}},{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Node\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PropertyTypeEnum\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RichText\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Database\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Node\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"object\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"created_time\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"last_edited_time\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RichText\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"properties\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"JSONObject\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"TextAnnotations\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"bold\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"italic\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"strikethrough\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"underline\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"code\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"color\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"TextAnnotationsFragment\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TextAnnotations\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"bold\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"italic\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"strikethrough\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"underline\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"code\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"color\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Text\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RichTextTypeEnum\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"content\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"link\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RichText\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RichTextTypeEnum\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"plain_text\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"href\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"annotations\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TextAnnotations\"}},\"directives\":[]}]},{\"kind\":\"UnionTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"AnyText\"},\"directives\":[],\"types\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Text\"}},{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RichText\"}}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Number\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"format\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":1349}};\n    doc.loc.source = {\"body\":\"#import \\\"../types.graphql\\\"\\n\\nenum RichTextTypeEnum {\\n  TEXT\\n  MENTION\\n  EQUATION\\n}\\n\\nenum PropertyTypeEnum {\\n  TITLE\\n  RICH_TEXT\\n  NUMBER\\n  SELECT\\n  MULTI_SELECT\\n  DATE\\n  PEOPLE\\n  FILE\\n  CHECKBOX\\n  URL\\n  EMAIL\\n  PHONE_NUMBER\\n  FORMULA\\n  RELATION\\n  ROLLUP\\n  CREATED_TIME\\n  CREATED_BY\\n  LAST_EDITED_TIME\\n  LAST_EDITED_BY\\n}\\n\\nenum NumberFormatEnum {\\n  NUMBER\\n  NUMBER_WITH_COMMAS\\n  PERCENT\\n  DOLLAR\\n  EURO\\n  POUND\\n  YEN\\n  RUBBLE\\n  RUPEE\\n  WON\\n  YUAN\\n}\\n\\n###############\\n\\ninterface Property implements Node {\\n  id: ID!\\n  type: PropertyTypeEnum\\n}\\n\\ntype PropertyTitle implements Property & Node {\\n  id: ID!\\n  type: PropertyTypeEnum\\n  name: String!\\n  title: [RichText]\\n}\\n\\ntype Database implements Node {\\n  id: ID!\\n  object: String\\n  created_time: String!\\n  last_edited_time: String!\\n  title: [RichText]\\n  properties: JSONObject\\n}\\n\\n#############\\n\\ntype TextAnnotations {\\n  bold: Boolean\\n  italic: Boolean\\n  strikethrough: Boolean\\n  underline: Boolean\\n  code: Boolean\\n  color: String\\n}\\nfragment TextAnnotationsFragment on TextAnnotations {\\n  bold\\n  italic\\n  strikethrough\\n  underline\\n  code\\n  color\\n}\\n\\ntype Text {\\n  type: RichTextTypeEnum\\n  content: String\\n  link: String\\n}\\n\\ntype RichText {\\n  type: RichTextTypeEnum!\\n  plain_text: String!\\n  href: String\\n  annotations: TextAnnotations\\n}\\nunion AnyText = Text | RichText\\n\\n########\\n\\ntype Number {\\n  format: String\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require(\"../types.graphql\").definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"TextAnnotationsFragment\"] = oneQuery(doc, \"TextAnnotationsFragment\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ScalarTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"JSONObject\"},\"directives\":[]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PageInfo\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"startCursor\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"endCursor\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"hasNextPage\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]}]},{\"kind\":\"InterfaceTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Edge\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"node\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Node\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"cursor\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]}]},{\"kind\":\"InterfaceTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Node\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]}]},{\"kind\":\"InterfaceTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Page\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"totalCount\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"edges\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Edge\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"pageInfo\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PageInfo\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":247}};\n    doc.loc.source = {\"body\":\"scalar JSONObject\\n\\ntype PageInfo {\\n  startCursor: ID\\n  endCursor: ID\\n  hasNextPage: Boolean\\n}\\ninterface Edge {\\n  node: Node\\n  cursor: ID!\\n}\\n\\ninterface Node {\\n  id: ID!\\n}\\n\\ninterface Page {\\n  totalCount: Int!\\n  edges: [Edge]\\n  pageInfo: PageInfo!\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","import { Client } from \"@notionhq/client\";\nimport { ClientOptions } from \"@notionhq/client/build/src/Client\";\nimport { DataSource } from \"apollo-datasource\";\n\nexport class Notion extends DataSource {\n  public api: Client;\n  constructor(config: ClientOptions) {\n    super();\n    this.api = new Client(config);\n  }\n}\n\n// const { Client } = require(\"@notionhq/client\");\n\n// const notion = new Client({ auth: process.env.NOTION_API_KEY });\n\n// (async () => {\n//   const databaseId = \"9e64c3a89a9f4f858d5ab1674109cf7d\";\n//   const response = await notion.databases.query({\n//     database_id: databaseId,\n//   });\n//   console.log(response);\n// })();\n","import { DataSource } from \"apollo-datasource\";\nimport AsyncAirtable from \"asyncairtable\";\nimport { Config } from \"asyncairtable/lib/@types\";\n\ninterface AirtableDataSourceConfig {\n  apiKey: string;\n  base: string;\n  config?: Config;\n}\n\nexport class Airtable extends DataSource {\n  public api: AsyncAirtable;\n  constructor(config: AirtableDataSourceConfig) {\n    super();\n    this.api = new AsyncAirtable(config.apiKey, config.base);\n  }\n}\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nexport default {\n  AIRTABLE: {\n    apiKey: process.env[\"AIRTABLE_APIKEY\"] || \"<API_KEY_HERE>\",\n    booksBaseId: \"appOqm0oQNWYyP5Kd\",\n  },\n  NOTION: {\n    apiKey: process.env[\"NOTION_API_KEY\"] || \"<API_KEY_HERE>\",\n  },\n};\n","import { Notion } from \"./notion\";\nimport { Airtable } from \"./airtable\";\n\nexport { Airtable } from \"./airtable\";\nexport { Notion } from \"./notion\";\n\nimport secrets from \"../secrets\";\n\nexport type DataSources = {\n  books: Airtable;\n  notion: Notion;\n};\n\nexport default function dataSourcesFactory(): DataSources {\n  return {\n    books: new Airtable({\n      apiKey: secrets.AIRTABLE.apiKey,\n      base: secrets.AIRTABLE.booksBaseId,\n    }),\n    notion: new Notion({\n      auth: secrets.NOTION.apiKey,\n    }),\n  };\n}\n","const BOOKS_BASE_ID = \"appOqm0oQNWYyP5Kd\";\n\nexport async function books(\n  _: any,\n  { limit = 10, page = 0 }: { limit: number; page: number },\n  { dataSources }\n) {\n  const booksAPI = dataSources.books.api;\n  const booksResponse = await booksAPI.select(\n    \"Books\",\n    {\n      pageSize: limit,\n      view: \"Main View\",\n    },\n    page\n  );\n\n  const books = booksResponse.map(({ id, fields }) => ({\n    id,\n    name: fields.Name,\n    synopsis: fields.Synopsis,\n  }));\n  return books;\n}\n","import { createModule } from \"graphql-modules\";\n\nimport typeDefs from \"./schema.graphql\";\nimport { books } from \"./resolver\";\n\nexport const resolvers = {\n  Query: {\n    books,\n  },\n};\n\nexport default createModule({\n  id: \"books\",\n  typeDefs: [typeDefs],\n  resolvers,\n});\n","export enum RichTextTypeEnum {\n  TEXT = \"text\",\n  MENTION = \"mention\",\n  EQUATION = \"equation\",\n}\nexport enum PropertyTypeEnum {\n  TITLE = \"title\",\n  RICH_TEXT = \"rich_text\",\n  NUMBER = \"number\",\n  SELECT = \"select\",\n  MULTI_SELECT = \"multi_select\",\n  DATE = \"date\",\n  PEOPLE = \"people\",\n  FILE = \"file\",\n  CHECKBOX = \"checkbox\",\n  URL = \"url\",\n  EMAIL = \"email\",\n  PHONE_NUMBER = \"phone_number\",\n  FORMULA = \"formula\",\n  RELATION = \"relation\",\n  ROLLUP = \"rollup\",\n  CREATED_TIME = \"created_time\",\n  CREATED_BY = \"created_by\",\n  LAST_EDITED_TIME = \"last_edited_time\",\n  LAST_EDITED_BY = \"last_edited_by\",\n}\n","import GQLJson, { GraphQLJSONObject as JSONObject } from \"graphql-type-json\";\n\nimport { DataSources } from \"../dataSources\";\nimport { pascalCase } from \"change-case\";\n\nimport { PropertyTypeEnum, RichTextTypeEnum } from \"./enums\";\n\nconst databaseId = \"9e64c3a89a9f4f858d5ab1674109cf7d\";\n\nexport const AnyText = {\n  __resolveType: (text) => pascalCase(text.type),\n};\n\nexport async function projectsDatabase(\n  _: any,\n  params,\n  { dataSources }: { dataSources: DataSources }\n) {\n  const projectsAPI = dataSources.notion.api;\n  const response = await projectsAPI.databases.retrieve({\n    database_id: databaseId,\n  });\n\n  return {\n    id: response.id,\n    object: response.object,\n    created_time: response.created_time,\n    last_edited_time: response.last_edited_time,\n    title: response.title,\n    properties: response.properties,\n  };\n}\n\nexport async function projects(\n  _: any,\n  {\n    start_cursor,\n    page_size = 100,\n  }: { start_cursor?: string; page_size: number },\n  { dataSources }: { dataSources: DataSources }\n) {\n  const projectsAPI = dataSources.notion.api;\n  const response = await projectsAPI.databases.query({\n    database_id: databaseId,\n    // start_cursor,\n    // page_size,\n  });\n\n  return {\n    totalCount: 0,\n    edges: response.results.map((item) => ({\n      node: {\n        id: item.id,\n        object: item.object,\n        properties: Object.entries(item.properties).map(\n          ([key, { id, type, ...rest }]) => ({\n            id: id,\n            name: key,\n            type: type,\n            ...rest,\n          })\n        ),\n      },\n      cursor: item.id,\n    })),\n    pageInfo: {\n      endCursor: response.next_cursor,\n      hasNextPage: response.has_more,\n    },\n  };\n}\n\nexport default {\n  JSONObject,\n  RichTextTypeEnum,\n  PropertyTypeEnum,\n  AnyText,\n  Query: {\n    projectsDatabase,\n    projects,\n  },\n};\n","import { createModule } from \"graphql-modules\";\n\nimport typeDefs from \"./schema.graphql\";\nimport resolvers from \"./resolvers\";\n\nexport default createModule({\n  id: \"projects\",\n  dirname: __dirname,\n  typeDefs: [typeDefs],\n  resolvers,\n});\n","import { ApolloServer } from \"apollo-server\";\nimport { createApplication } from \"graphql-modules\";\nimport { ApolloServerPluginUsageReportingDisabled } from \"apollo-server-core\";\n\nimport dataSourcesFactory from \"./dataSources\";\n\nimport books from \"./books/index\";\nimport projects from \"./projects/index\";\n\nconst app = createApplication({\n  modules: [books, projects],\n});\n\nconst schema = app.createSchemaForApollo();\nconst server = new ApolloServer({\n  schema,\n  dataSources: dataSourcesFactory,\n  tracing: true,\n  plugins: [ApolloServerPluginUsageReportingDisabled()],\n});\n\n// The `listen` method launches a web server.\nserver.listen().then(({ url }) => {\n  console.log(`🚀  Server ready at ${url}`);\n});\n\nif (module.hot) {\n  module.hot.accept();\n  module.hot.dispose(() => null);\n}\n"],"sourceRoot":""}