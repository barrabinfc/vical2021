---
import {toPage, Page} from '../../lib/page/Page'
import BaseLayout from '../../layouts/base.astro';
import Masthead from '../../components/Masthead';

import {cn} from '../../lib/helpers';

/** @ts-ignore */
const abspath = import.meta.url.pathname;
const astroContextSymbol = Symbol.for('astro.context');
const astroContext = Astro.props[astroContextSymbol];

let page:Page = toPage({
  layout: abspath,
  ...Astro.props.content,
  [astroContextSymbol]: astroContext
});
let content = page.content.content;
---

<BaseLayout {page}>
  <script type="text/javascript" src="https://unpkg.com/external-svg-loader@latest/svg-loader.min.js" async></script>
  <article id="content" project-slug={page.slug.toLowerCase()}>
    <link rel="stylesheet" href="/styles/devices.min.css" />
    <link rel="stylesheet" href="/styles/browser.min.css" />

    <Masthead className={cn('project-masthead','surface4', page.content.variant)}
      title={page.content.title}
      subtitle={page.content.subtitle}
      image={page.content.logo ?? null}
    ></Masthead>
    <section class={cn('project',page.content.variant)} aria-labelledby="masthead-title">
      <slot/>
    </section>
  </article>
</BaseLayout>

<style lang="scss" global>
@use "sass:math";
@use "src/styles/grids" as grids;
@use "src/styles/breakpoints" as bp;
@use "src/styles/helpers" as h;

.project-masthead {
  .content-container {
    max-width: 80vw;
    padding-left: 0;
    padding-right: 0;

    @include bp.breakpoint(small, max) {
      max-width: 90vw;
    }
  }
}
.project-masthead.full-width {
  .content-container {
    max-width: none;
    padding: var(--headerH) calc(var(--gap) * 8);
  }
}

.project  {
  max-width: 1440px;
  position: relative;

  &:not(.full-width) {
    width: 80vw;
    width: clamp(16rem, 80vw, 90rem);
    margin: 3em auto;

    @include bp.breakpoint(small, max) {
      width: clamp(16rem, 90vw, 90rem);
      margin: 3em auto;
    }
  }

  .description {
    margin: 2em 0;
  }

  /** Limit line-lengths */
  p,
  li {
    max-width: 120ch;
  }
  /** Links */
  a:not(.footnote-ref,.footnote-backref) {
    @include h.link-text;
  }
  a.footnote-backref {
    padding: 0 var(--gap);
    text-decoration: none;
  }

  img {
    max-width: 100%;
    display: flex;
    margin: 0 auto;
  }
  figcaption {
    text-align: center;
    color: var(--text2);
    font-style: italic;
  }

  /** Headers */
  .title {
      /** Headings of text shoul be smooth */
    --title-weight: var(--subtitle-weight);

    position: relative;
    max-width: 50ch;

    /** Headings links */
    a {
      position: absolute;
    }
  }

  p:first-of-type {
    margin-top: 0;
  }

  /**
   * Tables
   */
  table {
    margin-bottom: 1.5rem;
    border-spacing: 0px;
    border-top: 0px;
    overflow: hidden;
    table-layout: fixed;

    thead {
      background-color: var(--brand);
      color: var(--text1-invert);

      & th {
        font-size: 1.0rem;
        font-weight: var(--code-weight);
        text-align: center;
      }
    }
    tr:not(:last-child) {
      & td {
        border-bottom: 1px solid var(--surface2);
      }
    }
    & tr:last-child {
      & td {
        border-bottom: 1px solid var(--surface2);
      }
    }

    & th,
    & td {
      font-family: var(--code-family);
      font-weight: var(--code-weight);
      font-size: var(--s0);
      padding: calc(2 * var(--gap));
      border-right: 1px solid var(--surface2);

      &:first-of-type {
        border-left: 1px solid var(--surface2);
      }
    }
  }

  hr {
    margin: 2em 0em;
    border: 0;
    height: 1px;
    background-image: radial-gradient(circle at center, var(--surface4),transparent)
  }

}

.mockup {
  text-align: center;

  > .browser-mockup {
    width: 70%;
    margin: 0 auto;
  }

  > .marvel-device {
    zoom: 0.5;
    &::after {
      content: ' ';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: inherit;
      @include h.shadow();
    }
  }
}

/**
 * Gallery
 */
.gallery {
  .page {
    width: 100%;
    height: clamp(640px, 50vh, 60vh);
    display: flex;
    align-items: center;
    justify-content: center;

    &.h100 {
      height: clamp(640px, 100vh, 100vh);
    }
    &.h50 {
      height: clamp(640px, 50vh, 50vh);
    }
    &.h70 {
      height: clamp(640px, 70vh, 70vh);
    }
    &.h80 {
      height: clamp(640px, 80vh, 80vh);
    }
  }
}

</style>
