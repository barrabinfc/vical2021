---
import {resolve, relative, dirname } from 'node:path'
import {readFileSync} from 'node:fs';

import {toPage} from '../../lib/page/Page'
import Project from './Project.astro'

const page = toPage({
    layout: Astro.request.url.pathname,
    url: Astro.request.url,
    ...Astro.props.content,
});

let contentHtml = page.content.content;

/** If we have a gallery file, load it's html */
const galleryAddress = page.content.gallery;
let galleryHTML = `<pre>File ${galleryAddress} Not found</pre>`
if(galleryAddress) {
  const galleryAddressFullPath = resolve(`${process.cwd()}/${galleryAddress}`);
  galleryHTML = readFileSync(galleryAddressFullPath).toString();
}
---

<Project content={page}>
  <div class="two-columns">
    <section class="content pad8 left">
      {contentHtml}
    </section>
    <aside class="showcase right">
      {galleryHTML}
    </aside>
  </div>
</Project>

<style lang="scss" global>
@use "sass:math";
@use "src/styles/breakpoints" as bp;
@use "src/styles/grids" as grids;
@use "src/styles/helpers" as h;

$containerPadW: 0.1;
$containerWidth: 100vw - (100vw * $containerPadW);

.two-columns {
  /**
   * Subdivide in 5 columns
   * left is  2 pieces
   * right is 3 pieces
   */
  $columns: 5;
  $columnSizeVW: math.div( $containerWidth , $columns );
  $gap: calc( var(--gap) * 16);

  @include bp.breakpoint(medium, min) {
    @include grids.grid($columns, $gap);
    width: 100%;
    .left {
      min-width: 0;
      grid-column: span 2;
      align-self: start;

      position: sticky;
      top: var(--headerH);
    }
    .right {
      min-width: 0;
      grid-column: 3 / #{($columns+1)};
    }
  }

  @include bp.breakpoint(small, max) {
    @include grids.flexGrid();
  }

  .right {
    min-width: 0;
    grid-column: 3 / #{($columns+1)};

    .gallery {
      display: flex;
      flex-direction: column;
    }

    img{
      width: 100%;
      object-fit: cover;
    }

    video {
      width: 100%;
      object-fit: cover;
    }
  }
}

</style>
