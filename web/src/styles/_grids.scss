@use 'sass:math';
@use 'src/styles/breakpoints' as bp;

/**
 * A grid with display grid technique (not animable in 2021)
 */
@mixin grid($columns: 3, $gap: 8px) {
  @include bp.breakpoint(medium, max) {
    display: grid;
    gap: $gap;
    grid-template-columns: 1fr;
  }

  /**
   * Desktop have 3 columns
   */
  @include bp.breakpoint(medium, min) {
    display: grid;
    gap: $gap;
    grid-template-columns: repeat($columns, 1fr);

    // :global(.item:nth-child(1n), .span1) {
    //   grid-column: span 1;
    // }

    // :global(.item:nth-child(2n), .span2) {
    //   grid-column: span 2;
    // }

    // :global(.item:nth-child(3n), .span3) {
    //   grid-column: span 3;
    // }
  }
}

/**
 * A grid with display flex technique (animable)
 */
@mixin flexGrid($columns: 3, $gap: 8px) {
  display: flex;
  flex-wrap: wrap;
  align-content: flex-start;

  padding: 0;

  $itemWidth: calc(#{math.div(100%, $columns)} - #{$gap});
  width: 100%;
  row-gap: $gap;
  column-gap: $gap;

  @include bp.breakpoint(small, max) {
    /** Phones are only 1 column */
    :global(.item) {
      flex-basis: 100%;
    }
  }

  @include bp.breakpoint(small, min) {
    /** Items with equal width */
    :global(.item) {
      flex: 0 0 $itemWidth;
      // margin: $gap 0 0 $gap;
    }
  }
}
