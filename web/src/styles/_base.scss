@use "variables" as *;
@use "./helpers" as h;
@use "./breakpoints" as bp;
@use "./grids" as grids;
@use "colorscheme" as colors;

@import url('https://rsms.me/inter/inter.css');
@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300&display=swap');

@import './typo';
@import './anims';

/**
 * Custom css properties (available at runtime only)
 */
:root {
  /** Default font size for mobile */
  --unit: 16px;
  --scale: 1.125; /** Major second */

  @include bp.breakpoint(medium, min) {
    --unit: 18px;
    --scale: 1.25; /** major third */
  }

  /* Margin/padding units */
  --gap: #{$gap};
  --headerH: 64px;

  /** Default colorscheme is light */
  color-scheme: light;
  --brand: var(--brand-light);
  --text1: var(--text1-light);
  --text2: var(--text2-light);
  --text1-invert: var(--text1-dark);
  --text2-invert: var(--text2-dark);

  --surface1: var(--surface1-light);
  --surface2: var(--surface2-light);
  --surface3: var(--surface3-light);
  --surface4: var(--surface4-light);
  --surface-shadow: var(--surface-shadow-light);
  --shadow-strength: var(--shadow-strength-light);

  --anim-quick: 0.1s;
  --anim-default: 0.24s;
  --anim-slow: 1.37s;

  --anim-easeOutExpo: cubic-bezier(0.16, 1, 0.3, 1);
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;

    --brand: var(--brand-dark);
    --text1: var(--text1-dark);
    --text2: var(--text2-dark);
    --text1-invert: var(--text1-light);
    --text2-invert: var(--text2-light);

    --surface1: var(--surface1-dark);
    --surface2: var(--surface2-dark);
    --surface3: var(--surface3-dark);
    --surface4: var(--surface4-dark);
    --surface-shadow: var(--surface-shadow-dark);
    --shadow-strength: var(--shadow-strength-dark);
  }
}

* {
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

html {
  scroll-behavior: smooth;
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  word-wrap: break-word;

  background: var(--surface1);
  color: var(--text1);

  margin: 0;
  padding: 0;
}

/** Global wrapper */
.container {
  width: 100%;
  flex: 1 1 100%;
}

/* Reusable wrapper */
.wrapper {
  width: 90%;
  margin: 0 auto;
}

.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.pad4 {
  padding: calc(var(--gap) * 4) calc(var(--gap) * 4);
}
.pad4-x {
  padding: 0 calc(var(--gap) * 4);
}
.pad4-y {
  padding: calc(var(--gap) * 4) 0;
}

.pad8 {
  padding: calc(var(--gap) * 8) calc(var(--gap) * 8);
}
.pad8-x {
  padding: 0 calc(var(--gap) * 8);
}
.pad8-y {
  padding: calc(var(--gap) * 8) 0;
}

.fl-y-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.m-auto {
  margin: 0 auto;
}
.align-center {
  align-items: center;
}

/** Colorscheme */
.text1 {
  color: var(--text1);
}
.text2 {
  color: var(--text2);
}

.surface1 {
  background-color: var(--surface1);
}
.surface2 {
  background-color: var(--surface2);
}
.surface3 {
  background-color: var(--surface3);
}
.surface4 {
  background-color: var(--surface4);
}

.shadowed {
  @include h.shadow();
}

/** Grid generics */
.grid2 {
  @include grids.grid(2);
  align-content: space-evenly;
  justify-content: space-evenly;
}
.justifyCenter {
  justify-items: center;
}

@include bp.breakpoint(medium, min) {
  .twocolumn-page {
    columns: 2;

    > p:first-of-type {
      margin-top: 0;
    }
  }
}

.full-bleed {
  width: 100vw;
  margin-left: calc(50% - 50vw);
  & > * {
    max-width: 50rem;
    margin-left: auto;
    margin-right: auto;
  }
}
