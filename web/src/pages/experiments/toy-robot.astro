---
import {toPage, AstroContextSymbol} from '../../lib/page/Page.ts'
import {pagePathToUrl} from '../../lib/page/pagePathToUrl.js'

import { Markdown } from 'astro/components';
import MinimalLayout from '../../layouts/minimal.astro';

import RobotPlayground from './ToyRobot/Playground.tsx';

/** @ts-ignore */
const abspath = import.meta.url.pathname;

const page = toPage({
  name: 'toy-robot',
  abspath: abspath,
  slug: 'toy-robot',
  collection: 'experiments',
  layout: 'minimal.astro',
  status: 'draft',
  url: pagePathToUrl(abspath),
  tags: [],
  schema: 'website',

  published: false,
  publishedAt: null,

  content: {
    title: 'Toy Robot',
    subtitle: 'Toy Robot exercise using generator',
    description: '',
    headers: [],
    content: ''
  },
  robotCommands: `# Go to center
MOVE
MOVE
RIGHT
MOVE
MOVE`,
}, abspath)
---
<MinimalLayout page={page} className='wrapper'>

  <Markdown>
  # Toy Robot

  The Toy Robot exercise was originally developed by Jon Eaves.
  He explains why he did it in [this blog post](https://joneaves.wordpress.com/2014/07/21/toy-robot-coding-test/).

  The Toy Robot exercise is commonly used in interviews as the ways to solve it in any language are not as simple as they first may seem.
  This is **my personal implementation** in typescript.

  </Markdown>

  <RobotPlayground client:idle
    dimensions={[10,10]}
    code={page.content.robotCommands} />

  <Markdown>

#### The Toy What Now?
The Toy Robot! It's a very common interview exercise given to new programmers.

The application is a simulation of a toy robot moving on a square tabletop, of dimensions 5 units x 5 units. There are no other obstructions on the table surface. The robot is free to roam around the surface of the table. Any movement that would result in the robot falling from the table is prevented, however further valid movement commands are still allowed.

The application reads a file using a name passed in the command line, the following commands are valid:

- PLACE X,Y,F
- MOVE
- LEFT
- RIGHT
- REPORT

Here's some rules for these commands:

* PLACE will put the toy robot on the table in position X,Y and facing NORTH, SOUTH, EAST or WEST.
* The origin (0,0) is the SOUTH WEST most corner.
* All commands are ignored until a valid PLACE is made.
* MOVE will move the toy robot one unit forward in the direction it is currently facing.
* LEFT and RIGHT rotates the robot 90 degrees in the specified direction without changing the position of the robot.
* REPORT announces the X,Y and F of the robot.

The file is assumed to have ASCII encoding. It is assumed that the PLACE command has only one space, that is PLACE 1, 2, NORTH is an invalid command. All commands must be in upcase, all lower and mixed case commands will be ignored.

  </Markdown>
</MinimalLayout>

<style lang="scss" global>
astro-root {
  display: contents;
}

</style>
